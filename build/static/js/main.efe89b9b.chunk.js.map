{"version":3,"sources":["components/Cube.jsx","components/cubeCalc.js","components/App.jsx","components/buildRandomArray.js","index.js"],"names":["Cube","props","cubeContainerStyle","backgroundColor","item","baseHeight","isLandlocked","boxShadow","zIndex","margin","className","style","waterHeight","height","width","depth","waterVolume","visited","cubes","resultArray","x","y","this","totalHeight","N","E","S","W","getFillData","inputArray","length","inputFlattened","flat","Math","max","min","calculateDimensions","forEach","row","cube","push","checkIfLandlocked","landlockedCubes","filter","current","find","linkAdjacentCubes","i","anyFilled","canPool","fill","flatArray","rebuiltArray","splice","rebuildArray","includes","App","useState","w","h","mapSize","setGridSize","changeDimension","e","target","name","value","parseInt","prevValue","htmlFor","id","type","onChange","gridTemplateColumns","gridSize","output","currentRow","floor","random","buildRandomArray","map","getCubeElements","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efe89b9b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Cube(props) {\n    let cubeContainerStyle = {\n        backgroundColor:\n            props.item.baseHeight === 0 && props.item.isLandlocked === false\n                ? 'white'\n                : 'white',\n        boxShadow: `0px 0px ${(props.item.baseHeight / 10) * 10}px rgba(0,0,0,1)`,\n        zIndex: props.item.baseHeight,\n        margin: `-${props.item.baseHeight / 7}px`,\n    };\n\n    return (\n        <div className=\"cube-container\" style={cubeContainerStyle}>\n            <div\n                style={{\n                    backgroundColor: `rgba(0,128,255,${\n                        props.item.waterHeight / 10\n                    })`,\n                }}>\n                <span></span>\n            </div>\n        </div>\n    );\n}\n","let height, width, depth, waterVolume;\nlet visited = [];\nlet cubes = [];\nlet resultArray = [];\n\nclass Cube {\n    constructor(x, y, baseHeight, isLandlocked) {\n        this.x = x;\n        this.y = y;\n        this.baseHeight = baseHeight;\n        this.waterHeight = 0;\n        this.totalHeight = this.baseHeight + this.waterHeight;\n        this.isLandlocked = isLandlocked;\n        this.N = null;\n        this.E = null;\n        this.S = null;\n        this.W = null;\n    }\n    fill() {\n        this.waterHeight++;\n        this.totalHeight++;\n    }\n}\n\nexport default function getFillData(inputArray) {\n    if (inputArray.length === 0 || inputArray[0].length === 0) {\n        return {\n            waterVolume: 0,\n            resultArray: [],\n        };\n    }\n    waterVolume = 0;\n    resultArray = [];\n    cubes = [];\n    ({ height, width, depth } = calculateDimensions(inputArray));\n\n    inputArray.forEach((row, y) => {\n        row.forEach((cube, x) => {\n            cubes.push(\n                new Cube(x, y, cube, checkIfLandlocked(x, y, inputArray))\n            );\n        });\n    });\n\n    let landlockedCubes = cubes.filter(cube => cube.isLandlocked ? true : false);\n\n    linkAdjacentCubes(landlockedCubes);\n\n    for (let i = 0; i < depth; i++) {\n        let anyFilled = false;\n        landlockedCubes.forEach((cube) => {\n            visited = [];\n            if (canPool(cube)) {\n                anyFilled = true;\n                cube.fill();\n                waterVolume++;\n            }\n        });\n        if (!anyFilled) break;\n    }\n    resultArray = rebuildArray(cubes);\n\n    return {\n        waterVolume,\n        resultArray,\n    };\n}\n\nfunction linkAdjacentCubes(landlockedCubes) {\n    landlockedCubes.forEach((current) => {\n        if (!current.isLandlocked) return;\n        current.W = cubes.find((cube) => {\n            return cube.y === current.y && cube.x === current.x - 1\n                ? true\n                : false;\n        });\n        current.E = cubes.find((cube) => {\n            return cube.y === current.y && cube.x === current.x + 1\n                ? true\n                : false;\n        });\n        current.N = cubes.find((cube) => {\n            return cube.y === current.y - 1 && cube.x === current.x\n                ? true\n                : false;\n        });\n        current.S = cubes.find((cube) => {\n            return cube.y === current.y + 1 && cube.x === current.x\n                ? true\n                : false;\n        });\n    });\n}\n\nfunction rebuildArray(inputArray) {\n    let flatArray = [...inputArray];\n    let rebuiltArray = [];\n    while (flatArray.length > 0) rebuiltArray.push(flatArray.splice(0, width));\n    return rebuiltArray;\n}\n\nfunction canPool(current) {\n    if (visited.includes(current)) {\n        return true;\n    }\n    if (!current.isLandlocked) {\n        return false;\n    }\n    visited.push(current);\n    let N = current.N;\n    let E = current.E;\n    let S = current.S;\n    let W = current.W;\n    if (\n        current.totalHeight > N.totalHeight ||\n        current.totalHeight > E.totalHeight ||\n        current.totalHeight > S.totalHeight ||\n        current.totalHeight > W.totalHeight\n    ) {\n        return false;\n    }\n    if (current.totalHeight === N.totalHeight) {\n        if (!canPool(N)) {\n            return false;\n        }\n    }\n    if (current.totalHeight === E.totalHeight) {\n        if (!canPool(E)) {\n            return false;\n        }\n    }\n    if (current.totalHeight === S.totalHeight) {\n        if (!canPool(S)) {\n            return false;\n        }\n    }\n    if (current.totalHeight === W.totalHeight) {\n        if (!canPool(W)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction checkIfLandlocked(x, y) {\n    if (x === 0 || x === width - 1) return false;\n    if (y === 0 || y === height - 1) return false;\n    return true;\n}\n\nfunction calculateDimensions(inputArray) {\n    let inputFlattened = inputArray.flat();\n    let depth = Math.max(...inputFlattened) - Math.min(...inputFlattened);\n    let width = inputArray[0].length;\n    let height = inputArray.length;\n    return {\n        height,\n        width,\n        depth,\n    };\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport Cube from './Cube';\nimport getFillData from './cubeCalc';\nimport buildRandomArray from './buildRandomArray';\n\nexport default function App(props) {\n    let [mapSize, setGridSize] = useState({ w: 30, h: 30 });\n    let waterVolume;\n\n    function getCubeElements() {\n        let resultArray;\n        ({ resultArray, waterVolume } = getFillData(buildRandomArray(mapSize)));\n        return resultArray.flat().map((item, i) => {\n            return <Cube item={item} key={i} id={i} />;\n        });\n    }\n\n    function changeDimension(e) {\n        let { name, value } = e.target;\n        value = value === '' ? 0 : parseInt(value);\n        setGridSize((prevValue) => {\n            return { ...prevValue, [name]: value };\n        });\n    }\n\n    return (\n        <main>\n            <div className=\"input-container\">\n                <label htmlFor=\"width-input\">Width:</label>\n                <input\n                    id=\"width-input\"\n                    name=\"w\"\n                    type=\"number\"\n                    value={mapSize.w === 0 ? '' : mapSize.w}\n                    onChange={changeDimension}\n                />\n            </div> \n            <div className=\"input-container\">\n                <label htmlFor=\"height-input\">Height:</label>\n                <input\n                    id=\"height-input\"\n                    name=\"h\"\n                    type=\"number\"\n                    value={mapSize.h === 0 ? '' : mapSize.h}\n                    onChange={changeDimension}\n                />\n            </div>\n            <div\n                style={{\n                    gridTemplateColumns: `repeat(${mapSize.w}, 1fr)`,\n                }}\n                className=\"cube-map\">\n                {getCubeElements()}\n            </div>\n            <span>Total Volume: {waterVolume} Units</span>\n        </main>\n    );\n}\n","export default function buildRandomArray(gridSize) {\n    let { w, h } = gridSize;\n    let output = [];\n    for (let i = 0; i < h; i++) {\n        let currentRow = [];\n        for (let i = 0; i < w; i++) {\n            currentRow.push(Math.floor(Math.random() * 10));\n        }\n        output.push(currentRow);\n    }\n    return output;\n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.scss\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}